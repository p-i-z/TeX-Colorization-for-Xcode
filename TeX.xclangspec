/* 
 Tex LaTex Language Specification
 Part of package TeX-XCode Syntax Coloring
 Patrick Iglesias-Zemmour & Gemini (Google)
 Version 1.4.1 (Corrected Order) July 26, 2025
 http://math.huji.ac.il/~piz/
 
 Creative Common Attribution License
 http://creativecommons.org/licenses/by/3.0/
 */

( 
  
  /****************************************************************************/
  // MARK: TeX Specification Top-Level
  /****************************************************************************/
  
  {
    Identifier = "xcode.lang.tex";
    
    Description = "TeX Coloring";
    IncludeInMenu = YES;
    BasedOn = "xcode.lang.simpleColoring";
    Name = TeX;
    Syntax = {
      Tokenizer = "xcode.lang.tex.lexer";
      // CORRECTED RULE ORDER:
      // We now process begin/end blocks BEFORE generic commands.
      IncludeRules = (
        "xcode.lang.tex.word",
        "xcode.lang.tex.number",
        "xcode.lang.tex.comment.singleline",
        "xcode.lang.tex.beginendblock",      // MOVED UP: This must run before the general command rule.
        "xcode.lang.tex.math.block",
        "xcode.lang.tex.math.bracketblock",
        "xcode.lang.tex.math.inline",
        "xcode.lang.tex.command",            // This now handles all *other* commands.
        "xcode.lang.tex.command.special"
      );
      Type = "xcode.syntax.plain";
    };
  },
  
  
  /****************************************************************************/
  // MARK: TeX Lexers
  /****************************************************************************/
  
  {
    Identifier = "xcode.lang.tex.lexer";
    Syntax = {
      SourceScannerClassName = TeXScanner;
      IncludeRules = ( "xcode.lang.tex.beginkeyword", "xcode.lang.tex.endkeyword" );
    };
  },
  
  /****************************************************************************/
  // MARK: TeX Specification Words & Numbers
  /****************************************************************************/
  
  {
    Identifier = "xcode.lang.tex.word";
    Syntax = { StartChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"; Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"; Type = "xcode.syntax.plain"; };
  },
  {
    Identifier = "xcode.lang.tex.number";
    Syntax = { StartChars = "0123456789"; Chars = "0123456789."; Type = "xcode.syntax.plain"; };
  },
  
  /****************************************************************************/
  // MARK: TeX Specification Environment math.block
  /****************************************************************************/
  
  {
    Identifier = "xcode.lang.tex.math.block";
    Syntax = {
      Start = "\$\$"; End = "\$\$"; Foldable = YES; Recursive = NO;
      IncludeRules = ( "xcode.lang.tex.word", "xcode.lang.tex.number", "xcode.lang.tex.command", "xcode.lang.tex.command.special", "xcode.lang.tex.comment.singleline" );
      Type = "xcode.syntax.keyword";
    };
  },

  {
    Identifier = "xcode.lang.tex.math.bracketblock";
    Syntax = {
      Start = "\\\["; End = "\\\]"; Foldable = YES; Recursive = NO;
      IncludeRules = ( "xcode.lang.tex.word", "xcode.lang.tex.number", "xcode.lang.tex.command", "xcode.lang.tex.command.special", "xcode.lang.tex.comment.singleline" );
      Type = "xcode.syntax.keyword";
    };
  },
  
  /****************************************************************************/
  // MARK: Math Inline
  /****************************************************************************/
  
  {
    Identifier = "xcode.lang.tex.math.inline";
    Syntax = { Match = ( "\\$[^\\$]*\\$" ); Type = "xcode.syntax.keyword"; };
  },
  
  /****************************************************************************/
  // MARK: TeX Specification commands (IMPROVED)
  /****************************************************************************/
  
  {
    Identifier = "xcode.lang.tex.command";
    Syntax = {
        Match = ( "(\\\\[a-zA-Z@]+\\*?)(\\s*\\[[^\\]]*\\])?(\\s*\\{[^\\}]*\\})?" );
        CaptureTypes = ( "xcode.syntax.identifier.macro", "xcode.syntax.string", "xcode.syntax.preprocessor" );
        Type = "xcode.syntax.plain";
    };
  },
  
  {
    Identifier = "xcode.lang.tex.command.special";
    Syntax = { StartChars = "\\"; Chars = "'\"\^`{}()[]-+=.,;:/|%¬ß*#&@$<>~\\"; Type = "xcode.syntax.identifier.macro"; AltType = "xcode.syntax.word"; };
  },
  
  /****************************************************************************/
  // MARK: TeX Specification Environment block
  /****************************************************************************/
  
  {
    Identifier = "xcode.lang.tex.beginkeyword";
    Syntax = { StartChars = "\\"; Match = ( "\\\\begin\\{\(.*?\)\\}", ); CaptureTypes = ( "xcode.syntax.attribute" ); Type = "xcode.syntax.string"; };
  },
  {
    Identifier = "xcode.lang.tex.endkeyword";
    Syntax = { StartChars = "\\"; Match = ( "\\\\end\\{\(.*?\)\\}", ); CaptureTypes = ( "xcode.syntax.attribute" ); Type = "xcode.syntax.string"; };
  },
  {
    Identifier = "xcode.lang.tex.beginendblock";
    Syntax = {
      Tokenizer = "xcode.lang.tex.lexer"; Start = "xcode.lang.tex.beginkeyword"; End = "xcode.lang.tex.endkeyword";
      Recursive = YES; Foldable = YES; Type = "xcode.syntax.plain";
      IncludeRules = ( "xcode.lang.tex.math.block", "xcode.lang.tex.math.bracketblock", "xcode.lang.tex.math.inline", "xcode.lang.tex.command", "xcode.lang.tex.command.special", "xcode.lang.tex.comment.singleline" );
    };
  },
  
  /****************************************************************************/
  // MARK: TeX Language Specification comments
  /****************************************************************************/
  
  {
    Identifier = "xcode.lang.tex.comment.singleline";
    Syntax = { Start = "%"; EscapeChar = "\\"; End = "\n"; Type = "xcode.syntax.comment"; ParseEndBeforeIncludedRules = YES; IncludeRules = ( "xcode.lang.url", "xcode.lang.url.mail", "xcode.lang.comment.mark" ); };
  },
)
